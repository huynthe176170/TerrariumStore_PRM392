@{
    ViewData["Title"] = "Quản lý đơn hàng";
    Layout = "_Layout";
}

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <nav id="sidebar" class="col-md-3 col-lg-2 d-md-block bg-dark sidebar collapse">
            <div class="position-sticky pt-3">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Dashboard">
                            <i class="fas fa-tachometer-alt"></i> Tổng quan
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Products">
                            <i class="fas fa-box"></i> Sản phẩm
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active text-white" asp-controller="Admin" asp-action="Orders">
                            <i class="fas fa-shopping-cart"></i> Đơn hàng
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Users">
                            <i class="fas fa-users"></i> Người dùng
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Categories">
                            <i class="fas fa-tags"></i> Danh mục
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Payments">
                            <i class="fas fa-money-bill-wave"></i> Thanh toán
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Transactions">
                            <i class="fas fa-exchange-alt"></i> Giao dịch
                        </a>
                    </li>
                </ul>
            </div>
        </nav>

        <!-- Main content -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Quản lý đơn hàng</h1>
            </div>

            <!-- Filter, Search, and Sort Controls -->
            <div class="row mb-3">
                <div class="col-md-3">
                    <label for="statusFilter" class="form-label">Trạng thái đơn hàng</label>
                    <select class="form-select" id="statusFilter">
                        <option value="all">Tất cả trạng thái</option>
                        <option value="Pending">Chờ xử lý</option>
                        <option value="Processing">Đang xử lý</option>
                        <option value="Shipped">Đã giao hàng</option>
                        <option value="Delivered">Đã nhận hàng</option>
                        <option value="Cancelled">Đã hủy</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="dateRangeFilter" class="form-label">Khoảng thời gian</label>
                    <select class="form-select" id="dateRangeFilter">
                        <option value="all">Tất cả thời gian</option>
                        <option value="today">Hôm nay</option>
                        <option value="yesterday">Hôm qua</option>
                        <option value="thisWeek">Tuần này</option>
                        <option value="thisMonth">Tháng này</option>
                        <option value="lastMonth">Tháng trước</option>
                        <option value="custom">Tùy chỉnh...</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="sortBy" class="form-label">Sắp xếp theo</label>
                    <select class="form-select" id="sortBy">
                        <option value="date">Ngày đặt hàng</option>
                        <option value="id">Mã đơn hàng</option>
                        <option value="customer">Tên khách hàng</option>
                        <option value="total">Tổng tiền</option>
                        <option value="status">Trạng thái</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="sortDirection" class="form-label">Thứ tự</label>
                    <select class="form-select" id="sortDirection">
                        <option value="false">Giảm dần</option>
                        <option value="true">Tăng dần</option>
                    </select>
                </div>
            </div>

            <!-- Custom Date Range (initially hidden) -->
            <div class="row mb-3" id="customDateRange" style="display: none;">
                <div class="col-md-3">
                    <label for="fromDate" class="form-label">Từ ngày</label>
                    <input type="date" class="form-control" id="fromDate">
                </div>
                <div class="col-md-3">
                    <label for="toDate" class="form-label">Đến ngày</label>
                    <input type="date" class="form-control" id="toDate">
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button class="btn btn-primary" id="applyDateRange">Áp dụng</button>
                </div>
            </div>

            <!-- Search Bar -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" class="form-control" id="searchInput" placeholder="Tìm kiếm theo mã đơn hàng hoặc tên khách hàng...">
                        <button class="btn btn-outline-secondary" type="button" id="searchButton">
                            <i class="fas fa-search"></i> Tìm kiếm
                        </button>
                    </div>
                </div>
                <div class="col-md-6 text-end">
                    <button class="btn btn-outline-secondary" id="resetFilters">
                        <i class="fas fa-redo"></i> Đặt lại bộ lọc
                    </button>
                </div>
            </div>

            <!-- Orders Table -->
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Mã đơn</th>
                            <th>Khách hàng</th>
                            <th>Ngày đặt</th>
                            <th>Tổng tiền</th>
                            <th>Trạng thái</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody id="ordersTable">
                        <!-- Data will be loaded here -->
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <nav aria-label="Page navigation" class="mt-4">
                <ul class="pagination justify-content-center" id="pagination">
                    <!-- Pagination will be generated here -->
                </ul>
            </nav>
        </main>
    </div>
</div>

<!-- Order Status Modal -->
<div class="modal fade" id="statusModal" tabindex="-1" aria-labelledby="statusModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="statusModalLabel">Cập nhật trạng thái đơn hàng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="statusForm">
                    <input type="hidden" id="orderId" value="0">
                    <div class="mb-3">
                        <label for="orderStatus" class="form-label">Trạng thái</label>
                        <select class="form-select" id="orderStatus" required>
                            <option value="Pending">Chờ xử lý</option>
                            <option value="Processing">Đang xử lý</option>
                            <option value="Shipped">Đã giao hàng</option>
                            <option value="Delivered">Đã nhận hàng</option>
                            <option value="Cancelled">Đã hủy</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="saveStatusBtn">Lưu</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Kiểm tra token và role
            var token = localStorage.getItem("token");
            var role = localStorage.getItem("role");

            if (!token || role !== "Admin") {
                window.location.href = "/Home/Login";
                return;
            }

            // Load orders with default settings
            loadOrders();
            
            // Event handlers for filters, search, and sort
            $("#statusFilter, #sortBy, #sortDirection").change(function() {
                loadOrders();
            });
            
            $("#dateRangeFilter").change(function() {
                const value = $(this).val();
                if (value === "custom") {
                    $("#customDateRange").show();
                } else {
                    $("#customDateRange").hide();
                    loadOrders();
                }
            });
            
            $("#applyDateRange").click(function() {
                loadOrders();
            });
            
            $("#searchButton").click(function() {
                loadOrders();
            });
            
            // Allow search on Enter key press
            $("#searchInput").keypress(function(e) {
                if (e.which === 13) {
                    loadOrders();
                }
            });
            
            // Reset filters
            $("#resetFilters").click(function() {
                $("#statusFilter").val("all");
                $("#dateRangeFilter").val("all");
                $("#sortBy").val("date");
                $("#sortDirection").val("false");
                $("#searchInput").val("");
                $("#customDateRange").hide();
                loadOrders();
            });

            // Save status button click
            $("#saveStatusBtn").click(function() {
                updateOrderStatus();
            });
        });

        function loadOrders(page = 1) {
            const token = localStorage.getItem("token");
            const status = $("#statusFilter").val();
            const dateRange = $("#dateRangeFilter").val();
            const sortBy = $("#sortBy").val();
            const ascending = $("#sortDirection").val();
            const searchTerm = $("#searchInput").val();
            
            // Show loading indicator
            $("#ordersTable").html('<tr><td colspan="6" class="text-center"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></td></tr>');
            
            // Prepare query parameters
            let params = {
                sortBy: sortBy,
                ascending: ascending
            };
            
            // Add status filter if not "all"
            if (status !== "all") {
                params.status = status;
            }
            
            // Add search term if provided
            if (searchTerm) {
                params.searchTerm = searchTerm;
            }
            
            // Handle date range
            if (dateRange !== "all" && dateRange !== "custom") {
                const { fromDate, toDate } = getDateRangeValues(dateRange);
                if (fromDate) params.fromDate = fromDate.toISOString();
                if (toDate) params.toDate = toDate.toISOString();
            } else if (dateRange === "custom") {
                const fromDateValue = $("#fromDate").val();
                const toDateValue = $("#toDate").val();
                
                if (fromDateValue) {
                    params.fromDate = new Date(fromDateValue).toISOString();
                }
                
                if (toDateValue) {
                    params.toDate = new Date(toDateValue).toISOString();
                }
            }
            
            $.ajax({
                url: "https://localhost:7024/api/Order",
                method: "GET",
                headers: { "Authorization": `Bearer ${token}` },
                data: params,
                success: function(data) {
                    displayOrders(data);
                    generatePagination(data.length, page);
                },
                error: function(xhr) {
                    console.error("Error loading orders:", xhr);
                    $("#ordersTable").html('<tr><td colspan="6" class="text-center text-danger">Không thể tải danh sách đơn hàng. Vui lòng thử lại sau.</td></tr>');
                }
            });
        }

        function displayOrders(orders) {
            const tbody = $("#ordersTable");
            tbody.empty();
            
            if (orders.length === 0) {
                tbody.append(`
                    <tr>
                        <td colspan="6" class="text-center">Không có đơn hàng nào phù hợp với điều kiện tìm kiếm</td>
                    </tr>
                `);
                return;
            }
            
            orders.forEach(order => {
                const statusClass = getStatusClass(order.status);
                tbody.append(`
                    <tr>
                        <td>#${order.id}</td>
                        <td>${order.userName || 'N/A'}</td>
                        <td>${new Date(order.orderDate).toLocaleDateString()}</td>
                        <td>${order.totalPrice.toLocaleString()}đ</td>
                        <td><span class="badge ${statusClass}">${getStatusText(order.status)}</span></td>
                        <td>
                            <button class="btn btn-sm btn-info" onclick="viewOrderDetails(${order.id})">
                                <i class="fas fa-eye"></i>
                            </button>
                            <button class="btn btn-sm btn-primary" onclick="openStatusModal(${order.id}, '${order.status}')">
                                <i class="fas fa-edit"></i>
                            </button>
                        </td>
                    </tr>
                `);
            });
        }

        function getDateRangeValues(range) {
            const today = new Date();
            today.setHours(0, 0, 0, 0);
            
            const tomorrow = new Date(today);
            tomorrow.setDate(tomorrow.getDate() + 1);
            
            const yesterday = new Date(today);
            yesterday.setDate(yesterday.getDate() - 1);
            
            // Get start of week (Monday)
            const startOfWeek = new Date(today);
            const day = startOfWeek.getDay();
            const diff = startOfWeek.getDate() - day + (day === 0 ? -6 : 1);
            startOfWeek.setDate(diff);
            startOfWeek.setHours(0, 0, 0, 0);
            
            // Get start of month
            const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);
            
            // Get start of last month
            const startOfLastMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);
            
            // Get end of last month
            const endOfLastMonth = new Date(today.getFullYear(), today.getMonth(), 0);
            endOfLastMonth.setHours(23, 59, 59, 999);
            
            switch (range) {
                case "today":
                    return { fromDate: today, toDate: tomorrow };
                case "yesterday":
                    return { fromDate: yesterday, toDate: today };
                case "thisWeek":
                    return { fromDate: startOfWeek, toDate: null };
                case "thisMonth":
                    return { fromDate: startOfMonth, toDate: null };
                case "lastMonth":
                    return { fromDate: startOfLastMonth, toDate: endOfLastMonth };
                default:
                    return { fromDate: null, toDate: null };
            }
        }

        function generatePagination(totalItems, currentPage) {
            const itemsPerPage = 10;
            const totalPages = Math.ceil(totalItems / itemsPerPage);
            
            const pagination = $("#pagination");
            pagination.empty();
            
            if (totalPages <= 1) return;
            
            // Previous button
            pagination.append(`
                <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                    <a class="page-link" href="#" onclick="loadOrders(${currentPage - 1})" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            `);
            
            // Page numbers
            for (let i = 1; i <= totalPages; i++) {
                pagination.append(`
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="#" onclick="loadOrders(${i})">${i}</a>
                    </li>
                `);
            }
            
            // Next button
            pagination.append(`
                <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                    <a class="page-link" href="#" onclick="loadOrders(${currentPage + 1})" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            `);
        }

        function viewOrderDetails(id) {
            window.location.href = `/Admin/OrderDetails/${id}`;
        }

        function openStatusModal(id, status) {
            $("#orderId").val(id);
            $("#orderStatus").val(status);
            
            // Show modal
            var modal = new bootstrap.Modal(document.getElementById('statusModal'));
            modal.show();
        }

        function updateOrderStatus() {
            const token = localStorage.getItem("token");
            const orderId = $("#orderId").val();
            const status = $("#orderStatus").val();
            
            $.ajax({
                url: `https://localhost:7024/api/admin/orders/${orderId}/status`,
                method: "PUT",
                headers: { 
                    "Authorization": `Bearer ${token}`,
                    "Content-Type": "application/json"
                },
                data: JSON.stringify({ status: status }),
                success: function() {
                    // Close modal
                    $("#statusModal").modal("hide");
                    
                    // Reload orders
                    loadOrders();
                    
                    // Show success message
                    alert("Trạng thái đơn hàng đã được cập nhật thành công!");
                },
                error: function(xhr) {
                    console.error("Error updating order status:", xhr);
                    alert("Không thể cập nhật trạng thái đơn hàng. Vui lòng thử lại sau.");
                }
            });
        }

        function getStatusClass(status) {
            switch (status) {
                case "Pending": return "bg-warning";
                case "Processing": return "bg-info";
                case "Shipped": return "bg-primary";
                case "Delivered": return "bg-success";
                case "Cancelled": return "bg-danger";
                default: return "bg-secondary";
            }
        }

        function getStatusText(status) {
            switch (status) {
                case "Pending": return "Chờ xử lý";
                case "Processing": return "Đang xử lý";
                case "Shipped": return "Đã giao hàng";
                case "Delivered": return "Đã nhận hàng";
                case "Cancelled": return "Đã hủy";
                default: return status;
            }
        }
    </script>
}

<style>
.sidebar {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    z-index: 100;
    padding: 48px 0 0;
    box-shadow: inset -1px 0 0 rgba(0, 0, 0, .1);
}

.sidebar .nav-link {
    font-weight: 500;
    color: #fff;
    padding: .5rem 1rem;
}

.sidebar .nav-link:hover {
    color: #fff;
    background: rgba(255, 255, 255, 0.1);
}

.sidebar .nav-link.active {
    color: #fff;
    background: rgba(255, 255, 255, 0.2);
}
</style> 