@{
    ViewData["Title"] = "Quản lý người dùng";
    Layout = "_Layout";
}

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <nav id="sidebar" class="col-md-3 col-lg-2 d-md-block bg-dark sidebar collapse">
            <div class="position-sticky pt-3">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Dashboard">
                            <i class="fas fa-tachometer-alt"></i> Tổng quan
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Products">
                            <i class="fas fa-box"></i> Sản phẩm
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Orders">
                            <i class="fas fa-shopping-cart"></i> Đơn hàng
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active text-white" asp-controller="Admin" asp-action="Users">
                            <i class="fas fa-users"></i> Người dùng
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Categories">
                            <i class="fas fa-tags"></i> Danh mục
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Payments">
                            <i class="fas fa-money-bill-wave"></i> Thanh toán
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Transactions">
                            <i class="fas fa-exchange-alt"></i> Giao dịch
                        </a>
                    </li>
                </ul>
            </div>
        </nav>

        <!-- Main content -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Quản lý người dùng</h1>
            </div>

            <!-- Filter and Search Controls -->
            <div class="row mb-3">
                <div class="col-md-4">
                    <label for="roleFilter" class="form-label">Lọc theo vai trò</label>
                    <select class="form-select" id="roleFilter">
                        <option value="all">Tất cả vai trò</option>
                        <option value="Admin">Admin</option>
                        <option value="Customer">Khách hàng</option>
                    </select>
                </div>
                <div class="col-md-6">
                    <label for="searchInput" class="form-label">Tìm kiếm</label>
                    <div class="input-group">
                        <input type="text" class="form-control" id="searchInput" placeholder="Tìm theo tên, email, hoặc username...">
                        <button class="btn btn-outline-secondary" type="button" id="searchButton">
                            <i class="fas fa-search"></i> Tìm kiếm
                        </button>
                    </div>
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button class="btn btn-outline-secondary w-100" id="resetFilters">
                        <i class="fas fa-redo"></i> Đặt lại
                    </button>
                </div>
            </div>

            <!-- Users Table -->
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tên đầy đủ</th>
                            <th>Username</th>
                            <th>Email</th>
                            <th>Số điện thoại</th>
                            <th>Vai trò</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody id="usersTable">
                        <!-- Data will be loaded here -->
                    </tbody>
                </table>
            </div>
        </main>
    </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Chỉnh sửa thông tin người dùng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <input type="hidden" id="userId" value="0">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="fullName" class="form-label">Tên đầy đủ</label>
                            <input type="text" class="form-control" id="fullName" required>
                        </div>
                        <div class="col-md-6">
                            <label for="username" class="form-label">Username</label>
                            <input type="text" class="form-control" id="username" readonly>
                            <small class="text-muted">Username không thể thay đổi</small>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="email" required>
                        </div>
                        <div class="col-md-6">
                            <label for="phone" class="form-label">Số điện thoại</label>
                            <input type="tel" class="form-control" id="phone" required>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="address" class="form-label">Địa chỉ</label>
                        <textarea class="form-control" id="address" rows="2"></textarea>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="role" class="form-label">Vai trò</label>
                            <select class="form-select" id="role" required>
                                <option value="Admin">Admin</option>
                                <option value="Customer">Khách hàng</option>
                            </select>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="changePasswordCheck">
                            <label class="form-check-label" for="changePasswordCheck">
                                Đổi mật khẩu
                            </label>
                        </div>
                    </div>
                    <div id="passwordFields" style="display: none;">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="newPassword" class="form-label">Mật khẩu mới</label>
                                <input type="password" class="form-control" id="newPassword">
                            </div>
                            <div class="col-md-6">
                                <label for="confirmPassword" class="form-label">Xác nhận mật khẩu</label>
                                <input type="password" class="form-control" id="confirmPassword">
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="saveUserBtn">Lưu</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa người dùng này không?</p>
                <p class="text-danger">Lưu ý: Hành động này không thể hoàn tác và sẽ xóa tất cả dữ liệu liên quan đến người dùng này.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Xóa</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Kiểm tra token và role
            var token = localStorage.getItem("token");
            var role = localStorage.getItem("role");

            if (!token || role !== "Admin") {
                window.location.href = "/Home/Login";
                return;
            }

            // Load users
            loadUsers();
            
            // Event handlers
            $("#roleFilter").change(function() {
                loadUsers();
            });
            
            $("#searchButton").click(function() {
                loadUsers();
            });
            
            $("#searchInput").keypress(function(e) {
                if (e.which === 13) {
                    loadUsers();
                }
            });
            
            $("#resetFilters").click(function() {
                $("#roleFilter").val("all");
                $("#searchInput").val("");
                loadUsers();
            });
            
            $("#changePasswordCheck").change(function() {
                if ($(this).is(":checked")) {
                    $("#passwordFields").show();
                } else {
                    $("#passwordFields").hide();
                    $("#newPassword").val("");
                    $("#confirmPassword").val("");
                }
            });
            
            $("#saveUserBtn").click(function() {
                saveUser();
            });
            
            $("#confirmDeleteBtn").click(function() {
                deleteUser($(this).data("userId"));
            });
        });

        function loadUsers() {
            const token = localStorage.getItem("token");
            const roleFilter = $("#roleFilter").val();
            const searchTerm = $("#searchInput").val();
            
            // Show loading indicator
            $("#usersTable").html('<tr><td colspan="7" class="text-center"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></td></tr>');
            
            $.ajax({
                url: "https://localhost:7024/api/User",
                method: "GET",
                headers: { "Authorization": `Bearer ${token}` },
                success: function(data) {
                    const tbody = $("#usersTable");
                    tbody.empty();
                    
                    // Filter data based on role and search term
                    let filteredData = data;
                    
                    if (roleFilter !== "all") {
                        filteredData = filteredData.filter(user => user.role === roleFilter);
                    }
                    
                    if (searchTerm) {
                        const searchLower = searchTerm.toLowerCase();
                        filteredData = filteredData.filter(user => 
                            user.fullName.toLowerCase().includes(searchLower) || 
                            user.email.toLowerCase().includes(searchLower) || 
                            user.username.toLowerCase().includes(searchLower)
                        );
                    }
                    
                    if (filteredData.length === 0) {
                        tbody.append('<tr><td colspan="7" class="text-center">Không tìm thấy người dùng nào</td></tr>');
                        return;
                    }
                    
                    filteredData.forEach(user => {
                        const roleClass = user.role === "Admin" ? "text-danger" : "text-success";
                        tbody.append(`
                            <tr>
                                <td>${user.id}</td>
                                <td>${user.fullName}</td>
                                <td>${user.username}</td>
                                <td>${user.email}</td>
                                <td>${user.phone || 'N/A'}</td>
                                <td><span class="${roleClass}">${user.role}</span></td>
                                <td>
                                    <button class="btn btn-sm btn-primary" onclick="editUser(${user.id})">
                                        <i class="fas fa-edit"></i> Sửa
                                    </button>
                                    <button class="btn btn-sm btn-danger" onclick="confirmDelete(${user.id}, '${user.fullName}')">
                                        <i class="fas fa-trash"></i> Xóa
                                    </button>
                                </td>
                            </tr>
                        `);
                    });
                },
                error: function(xhr) {
                    console.error("Error loading users:", xhr);
                    $("#usersTable").html('<tr><td colspan="7" class="text-center text-danger">Không thể tải danh sách người dùng. Vui lòng thử lại sau.</td></tr>');
                }
            });
        }

        function editUser(id) {
            const token = localStorage.getItem("token");
            
            $.ajax({
                url: `https://localhost:7024/api/User/${id}`,
                method: "GET",
                headers: { "Authorization": `Bearer ${token}` },
                success: function(user) {
                    // Fill form with user data
                    $("#userId").val(user.id);
                    $("#fullName").val(user.fullName);
                    $("#username").val(user.username);
                    $("#email").val(user.email);
                    $("#phone").val(user.phone);
                    $("#address").val(user.address);
                    $("#role").val(user.role);
                    
                    // Reset password fields
                    $("#changePasswordCheck").prop("checked", false);
                    $("#passwordFields").hide();
                    $("#newPassword").val("");
                    $("#confirmPassword").val("");
                    
                    // Show modal
                    var modal = new bootstrap.Modal(document.getElementById('editUserModal'));
                    modal.show();
                },
                error: function(xhr) {
                    console.error("Error loading user details:", xhr);
                    alert("Không thể tải thông tin người dùng. Vui lòng thử lại sau.");
                }
            });
        }

        function saveUser() {
            const token = localStorage.getItem("token");
            const userId = $("#userId").val();
            
            // Validate form
            if (!$("#fullName").val() || !$("#email").val() || !$("#phone").val()) {
                alert("Vui lòng điền đầy đủ thông tin bắt buộc.");
                return;
            }
            
            // Validate password if changing
            if ($("#changePasswordCheck").is(":checked")) {
                const newPassword = $("#newPassword").val();
                const confirmPassword = $("#confirmPassword").val();
                
                if (!newPassword) {
                    alert("Vui lòng nhập mật khẩu mới.");
                    return;
                }
                
                if (newPassword !== confirmPassword) {
                    alert("Mật khẩu xác nhận không khớp.");
                    return;
                }
            }
            
            const userData = {
                fullName: $("#fullName").val(),
                email: $("#email").val(),
                phone: $("#phone").val(),
                address: $("#address").val(),
                role: $("#role").val()
            };
            
            // Add password if changing
            if ($("#changePasswordCheck").is(":checked")) {
                userData.newPassword = $("#newPassword").val();
            }
            
            $.ajax({
                url: `https://localhost:7024/api/User/${userId}`,
                method: "PUT",
                headers: { 
                    "Authorization": `Bearer ${token}`,
                    "Content-Type": "application/json"
                },
                data: JSON.stringify(userData),
                success: function() {
                    // Close modal
                    $("#editUserModal").modal("hide");
                    
                    // Reload users
                    loadUsers();
                    
                    // Show success message
                    alert("Thông tin người dùng đã được cập nhật thành công!");
                },
                error: function(xhr) {
                    console.error("Error updating user:", xhr);
                    alert("Không thể cập nhật thông tin người dùng. Vui lòng thử lại sau.");
                }
            });
        }

        function confirmDelete(id, name) {
            // Update modal content
            $("#deleteModalLabel").text(`Xác nhận xóa người dùng: ${name}`);
            
            // Store user ID to delete
            $("#confirmDeleteBtn").data("userId", id);
            
            // Show confirmation modal
            var modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }

        function deleteUser(id) {
            const token = localStorage.getItem("token");
            
            $.ajax({
                url: `https://localhost:7024/api/User/${id}`,
                method: "DELETE",
                headers: { "Authorization": `Bearer ${token}` },
                success: function() {
                    // Close modal
                    $("#deleteModal").modal("hide");
                    
                    // Reload users
                    loadUsers();
                    
                    // Show success message
                    alert("Người dùng đã được xóa thành công!");
                },
                error: function(xhr) {
                    console.error("Error deleting user:", xhr);
                    alert("Không thể xóa người dùng. Vui lòng thử lại sau.");
                }
            });
        }
    </script>
}

<style>
.sidebar {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    z-index: 100;
    padding: 48px 0 0;
    box-shadow: inset -1px 0 0 rgba(0, 0, 0, .1);
}

.sidebar .nav-link {
    font-weight: 500;
    color: #fff;
    padding: .5rem 1rem;
}

.sidebar .nav-link:hover {
    color: #fff;
    background: rgba(255, 255, 255, 0.1);
}

.sidebar .nav-link.active {
    color: #fff;
    background: rgba(255, 255, 255, 0.2);
}
</style> 