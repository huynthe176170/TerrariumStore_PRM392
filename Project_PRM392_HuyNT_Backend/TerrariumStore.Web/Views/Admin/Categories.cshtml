@{
    ViewData["Title"] = "Quản lý danh mục";
    Layout = "_Layout";
}

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <nav id="sidebar" class="col-md-3 col-lg-2 d-md-block bg-dark sidebar collapse">
            <div class="position-sticky pt-3">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Dashboard">
                            <i class="fas fa-tachometer-alt"></i> Tổng quan
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Products">
                            <i class="fas fa-box"></i> Sản phẩm
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Orders">
                            <i class="fas fa-shopping-cart"></i> Đơn hàng
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Users">
                            <i class="fas fa-users"></i> Người dùng
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active text-white" asp-controller="Admin" asp-action="Categories">
                            <i class="fas fa-tags"></i> Danh mục
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Payments">
                            <i class="fas fa-money-bill-wave"></i> Thanh toán
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-controller="Admin" asp-action="Transactions">
                            <i class="fas fa-exchange-alt"></i> Giao dịch
                        </a>
                    </li>
                </ul>
            </div>
        </nav>

        <!-- Main content -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Quản lý danh mục</h1>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <button type="button" class="btn btn-success" onclick="openAddCategoryModal()">
                        <i class="fas fa-plus"></i> Thêm danh mục mới
                    </button>
                </div>
            </div>

            <!-- Search Bar -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" class="form-control" id="searchInput" placeholder="Tìm kiếm danh mục...">
                        <button class="btn btn-outline-secondary" type="button" id="searchButton">
                            <i class="fas fa-search"></i> Tìm kiếm
                        </button>
                    </div>
                </div>
                <div class="col-md-6 text-end">
                    <button class="btn btn-outline-secondary" id="resetSearch">
                        <i class="fas fa-redo"></i> Đặt lại
                    </button>
                </div>
            </div>

            <!-- Categories Table -->
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tên danh mục</th>
                            <th>Mô tả</th>
                            <th>Số sản phẩm</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody id="categoriesTable">
                        <!-- Data will be loaded here -->
                    </tbody>
                </table>
            </div>
        </main>
    </div>
</div>

<!-- Add/Edit Category Modal -->
<div class="modal fade" id="categoryModal" tabindex="-1" aria-labelledby="categoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="categoryModalLabel">Thêm danh mục mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="categoryForm">
                    <input type="hidden" id="categoryId" value="0">
                    <div class="mb-3">
                        <label for="categoryName" class="form-label">Tên danh mục</label>
                        <input type="text" class="form-control" id="categoryName" required>
                    </div>
                    <div class="mb-3">
                        <label for="categoryDescription" class="form-label">Mô tả</label>
                        <textarea class="form-control" id="categoryDescription" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="saveCategoryBtn">Lưu</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa danh mục này không?</p>
                <p class="text-danger">Lưu ý: Việc xóa danh mục có thể ảnh hưởng đến các sản phẩm thuộc danh mục này.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Xóa</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Kiểm tra token và role
            var token = localStorage.getItem("token");
            var role = localStorage.getItem("role");

            if (!token || role !== "Admin") {
                window.location.href = "/Home/Login";
                return;
            }

            // Load categories
            loadCategories();
            
            // Event handlers
            $("#searchButton").click(function() {
                searchCategories();
            });
            
            $("#searchInput").keypress(function(e) {
                if (e.which === 13) {
                    searchCategories();
                }
            });
            
            $("#resetSearch").click(function() {
                $("#searchInput").val("");
                loadCategories();
            });
            
            $("#saveCategoryBtn").click(function() {
                saveCategory();
            });
            
            $("#confirmDeleteBtn").click(function() {
                deleteCategory($(this).data("categoryId"));
            });
        });

        function loadCategories() {
            const token = localStorage.getItem("token");
            
            // Show loading indicator
            $("#categoriesTable").html('<tr><td colspan="5" class="text-center"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></td></tr>');
            
            // Load categories and product counts
            $.ajax({
                url: "https://localhost:7024/api/Category",
                method: "GET",
                headers: { "Authorization": `Bearer ${token}` },
                success: function(categories) {
                    // Load products to count products per category
                    $.ajax({
                        url: "https://localhost:7024/api/Product",
                        method: "GET",
                        headers: { "Authorization": `Bearer ${token}` },
                        success: function(products) {
                            displayCategories(categories, products);
                        },
                        error: function(xhr) {
                            console.error("Error loading products:", xhr);
                            displayCategories(categories, []);
                        }
                    });
                },
                error: function(xhr) {
                    console.error("Error loading categories:", xhr);
                    $("#categoriesTable").html('<tr><td colspan="5" class="text-center text-danger">Không thể tải danh sách danh mục. Vui lòng thử lại sau.</td></tr>');
                }
            });
        }

        function displayCategories(categories, products) {
            const tbody = $("#categoriesTable");
            tbody.empty();
            
            if (categories.length === 0) {
                tbody.append('<tr><td colspan="5" class="text-center">Không có danh mục nào</td></tr>');
                return;
            }
            
            // Count products per category
            const productCounts = {};
            products.forEach(product => {
                if (productCounts[product.categoryId]) {
                    productCounts[product.categoryId]++;
                } else {
                    productCounts[product.categoryId] = 1;
                }
            });
            
            categories.forEach(category => {
                const productCount = productCounts[category.id] || 0;
                tbody.append(`
                    <tr>
                        <td>${category.id}</td>
                        <td>${category.name}</td>
                        <td>${category.description || 'Không có mô tả'}</td>
                        <td>${productCount}</td>
                        <td>
                            <button class="btn btn-sm btn-primary" onclick="editCategory(${category.id})">
                                <i class="fas fa-edit"></i> Sửa
                            </button>
                            <button class="btn btn-sm btn-danger" onclick="confirmDelete(${category.id}, '${category.name}')">
                                <i class="fas fa-trash"></i> Xóa
                            </button>
                        </td>
                    </tr>
                `);
            });
        }

        function searchCategories() {
            const searchTerm = $("#searchInput").val().toLowerCase();
            if (!searchTerm) {
                loadCategories();
                return;
            }
            
            const token = localStorage.getItem("token");
            
            // Show loading indicator
            $("#categoriesTable").html('<tr><td colspan="5" class="text-center"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></td></tr>');
            
            $.ajax({
                url: "https://localhost:7024/api/Category",
                method: "GET",
                headers: { "Authorization": `Bearer ${token}` },
                success: function(categories) {
                    // Filter categories by search term
                    const filteredCategories = categories.filter(category => 
                        category.name.toLowerCase().includes(searchTerm) || 
                        (category.description && category.description.toLowerCase().includes(searchTerm))
                    );
                    
                    // Load products to count products per category
                    $.ajax({
                        url: "https://localhost:7024/api/Product",
                        method: "GET",
                        headers: { "Authorization": `Bearer ${token}` },
                        success: function(products) {
                            displayCategories(filteredCategories, products);
                        },
                        error: function(xhr) {
                            console.error("Error loading products:", xhr);
                            displayCategories(filteredCategories, []);
                        }
                    });
                },
                error: function(xhr) {
                    console.error("Error searching categories:", xhr);
                    $("#categoriesTable").html('<tr><td colspan="5" class="text-center text-danger">Không thể tìm kiếm danh mục. Vui lòng thử lại sau.</td></tr>');
                }
            });
        }

        function openAddCategoryModal() {
            // Reset form
            $("#categoryForm")[0].reset();
            $("#categoryId").val(0);
            $("#categoryModalLabel").text("Thêm danh mục mới");
            
            // Show modal
            var modal = new bootstrap.Modal(document.getElementById('categoryModal'));
            modal.show();
        }

        function editCategory(id) {
            const token = localStorage.getItem("token");
            
            $.ajax({
                url: `https://localhost:7024/api/Category/${id}`,
                method: "GET",
                headers: { "Authorization": `Bearer ${token}` },
                success: function(category) {
                    // Fill form with category data
                    $("#categoryId").val(category.id);
                    $("#categoryName").val(category.name);
                    $("#categoryDescription").val(category.description);
                    
                    // Update modal title
                    $("#categoryModalLabel").text("Chỉnh sửa danh mục");
                    
                    // Show modal
                    var modal = new bootstrap.Modal(document.getElementById('categoryModal'));
                    modal.show();
                },
                error: function(xhr) {
                    console.error("Error loading category details:", xhr);
                    alert("Không thể tải thông tin danh mục. Vui lòng thử lại sau.");
                }
            });
        }

        function saveCategory() {
            const token = localStorage.getItem("token");
            const categoryId = $("#categoryId").val();
            
            // Validate form
            if (!$("#categoryName").val()) {
                alert("Vui lòng nhập tên danh mục.");
                return;
            }
            
            const categoryData = {
                name: $("#categoryName").val(),
                description: $("#categoryDescription").val()
            };
            
            const method = categoryId != 0 ? "PUT" : "POST";
            const url = categoryId != 0 ? `https://localhost:7024/api/Category/${categoryId}` : "https://localhost:7024/api/Category";
            
            $.ajax({
                url: url,
                method: method,
                headers: { 
                    "Authorization": `Bearer ${token}`,
                    "Content-Type": "application/json"
                },
                data: JSON.stringify(categoryData),
                success: function() {
                    // Close modal
                    $("#categoryModal").modal("hide");
                    
                    // Reload categories
                    loadCategories();
                    
                    // Show success message
                    alert(categoryId != 0 ? "Danh mục đã được cập nhật thành công!" : "Danh mục đã được thêm thành công!");
                },
                error: function(xhr) {
                    console.error("Error saving category:", xhr);
                    alert("Không thể lưu danh mục. Vui lòng thử lại sau.");
                }
            });
        }

        function confirmDelete(id, name) {
            // Update modal content
            $("#deleteModalLabel").text(`Xác nhận xóa danh mục: ${name}`);
            
            // Store category ID to delete
            $("#confirmDeleteBtn").data("categoryId", id);
            
            // Show confirmation modal
            var modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }

        function deleteCategory(id) {
            const token = localStorage.getItem("token");
            
            $.ajax({
                url: `https://localhost:7024/api/Category/${id}`,
                method: "DELETE",
                headers: { "Authorization": `Bearer ${token}` },
                success: function() {
                    // Close modal
                    $("#deleteModal").modal("hide");
                    
                    // Reload categories
                    loadCategories();
                    
                    // Show success message
                    alert("Danh mục đã được xóa thành công!");
                },
                error: function(xhr) {
                    console.error("Error deleting category:", xhr);
                    alert("Không thể xóa danh mục. Vui lòng thử lại sau.");
                }
            });
        }
    </script>
}

<style>
.sidebar {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    z-index: 100;
    padding: 48px 0 0;
    box-shadow: inset -1px 0 0 rgba(0, 0, 0, .1);
}

.sidebar .nav-link {
    font-weight: 500;
    color: #fff;
    padding: .5rem 1rem;
}

.sidebar .nav-link:hover {
    color: #fff;
    background: rgba(255, 255, 255, 0.1);
}

.sidebar .nav-link.active {
    color: #fff;
    background: rgba(255, 255, 255, 0.2);
}
</style> 